"use client";
import { Card, Typography, Spin, Button } from "antd";
import { useState } from "react";
import { FaStethoscope, FaEye } from "react-icons/fa";
import { useRouter } from "@/app/shares/locales/navigation";

const { Title, Text } = Typography;

export type DiagnosisHistory = {
  id: string;
  diagnosis: string;
  doctor: string;
  date: string;
  note?: string;
};

const mockDiagnosisHistory: DiagnosisHistory[] = [];
// [
//   {
//     id: "1",
//     date: "2025-3-20T08:20:00Z",
//     diagnosis: "keratitiswithulcer",
//     doctor: "Dr. Tr·∫ßn Th·ªã F",
//     note: "ƒêi·ªÅu tr·ªã b·∫±ng thu·ªëc nh·ªè m·∫Øt ƒë·∫∑c tr·ªã",
//   },
//   {
//     id: "2",
//     date: "2024-09-16T14:00:00Z",
//     diagnosis: "conjunctivitis",
//     doctor: "Dr. Tr·∫ßn Th·ªã B",
//     note: "R·ª≠a m·∫Øt b·∫±ng n∆∞·ªõc mu·ªëi sinh l√Ω",
//   },
//   {
//     id: "3",
//     date: "2023-06-17T09:15:00Z",
//     diagnosis: "eyelidedema",
//     doctor: "Dr. L√™ VƒÉn C",
//     note: "Ch∆∞·ªùm l·∫°nh, tr√°nh d·ª•i m·∫Øt",
//   },
// ];

const diagnosisMap: Record<string, string> = {
  conjunctivitis: "Vi√™m k·∫øt m·∫°c (ƒêau m·∫Øt ƒë·ªè)",
  eyelidedema: "Ph√π n·ªÅ m√≠ m·∫Øt",
  healthy_eye: "M·∫Øt b√¨nh th∆∞·ªùng",
  hordeolum: "Ch·∫Øp / L·∫πo",
  keratitiswithulcer: "Vi√™m gi√°c m·∫°c c√≥ lo√©t",
  subconjunctival_hemorrhage: "Xu·∫•t huy·∫øt d∆∞·ªõi k·∫øt m·∫°c",
};

export default function DiagnosisHistoryList() {
  const [data] = useState<DiagnosisHistory[]>(mockDiagnosisHistory);
  const [loading] = useState(false);
  const router = useRouter();

  if (loading) {
    return (
      <div className="flex justify-center items-center min-h-[400px]">
        <Spin size="large" tip="ƒêang t·∫£i l·ªãch s·ª≠ ch·∫©n ƒëo√°n..." />
      </div>
    );
  }

  if (data.length === 0) {
    return (
      <div className="flex flex-col items-center justify-center min-h-[500px] text-center px-4">
        {/* Icon animation */}
        <div className="relative mb-8">
          <div className="absolute inset-0 bg-blue-100 rounded-full animate-pulse"></div>
          <div className="relative bg-gradient-to-br from-blue-50 to-blue-100 rounded-full p-12">
            <FaStethoscope className="text-blue-400 text-7xl" />
          </div>
        </div>

        {/* Text content */}
        <Title level={3} className="!mb-3 text-gray-800">
          Ch∆∞a c√≥ l·ªãch s·ª≠ ch·∫©n ƒëo√°n
        </Title>
        <Text className="text-gray-500 text-lg mb-8 max-w-md">
          B·∫°n ch∆∞a c√≥ l·ªãch s·ª≠ kh√°m b·ªánh n√†o. H√£y ƒë·∫∑t l·ªãch kh√°m ho·∫∑c s·ª≠ d·ª•ng t√≠nh nƒÉng ch·∫©n ƒëo√°n AI
          ƒë·ªÉ ki·ªÉm tra s·ª©c kh·ªèe m·∫Øt.
        </Text>

        {/* Action buttons */}
        <div className="flex flex-col sm:flex-row gap-4">
          <Button
            type="primary"
            size="large"
            icon={<FaEye />}
            onClick={() => router.push("/predict")}
            className="!h-12 !px-8 !bg-gradient-to-r !from-blue-500 !to-blue-600 hover:!from-blue-600 hover:!to-blue-700"
          >
            Ch·∫©n ƒëo√°n AI
          </Button>
          <Button size="large" onClick={() => router.push("/booking")} className="!h-12 !px-8">
            ƒê·∫∑t l·ªãch kh√°m
          </Button>
        </div>

        {/* Decorative elements */}
        <div className="mt-12 grid grid-cols-3 gap-4 max-w-md opacity-40">
          <div className="bg-gray-100 rounded-lg p-4 text-center">
            <div className="text-2xl mb-1">ü§ñ</div>
            <Text className="text-xs text-gray-500">AI th√¥ng minh</Text>
          </div>
          <div className="bg-gray-100 rounded-lg p-4 text-center">
            <div className="text-2xl mb-1">üëÅÔ∏è</div>
            <Text className="text-xs text-gray-500">Ch√≠nh x√°c cao</Text>
          </div>
          <div className="bg-gray-100 rounded-lg p-4 text-center">
            <div className="text-2xl mb-1">‚ö°</div>
            <Text className="text-xs text-gray-500">Nhanh ch√≥ng</Text>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div>
      <Title level={4}>L·ªãch s·ª≠ ch·∫©n ƒëo√°n</Title>

      <div className="grid gap-4 md:grid-cols-2">
        {data.map((item) => (
          <Card key={item.id} hoverable>
            <div className="mb-2">
              <Text strong>Ng√†y: </Text>
              <Text>
                {new Date(item.date).toLocaleDateString("vi-VN", {
                  day: "2-digit",
                  month: "2-digit",
                  year: "numeric",
                })}
              </Text>
            </div>

            <div className="mb-2">
              <Text strong>Ch·∫©n ƒëo√°n: </Text>
              <Text>{diagnosisMap[item.diagnosis] || item.diagnosis}</Text>
            </div>

            <div className="mb-2">
              <Text strong>B√°c sƒ©: </Text>
              <Text>{item.doctor}</Text>
            </div>

            {item.note && (
              <div>
                <Text strong>Ghi ch√∫: </Text>
                <Text>{item.note}</Text>
              </div>
            )}
          </Card>
        ))}
      </div>
    </div>
  );
}
